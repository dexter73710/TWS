pipeline {
    agent any
    
    environment {
        SONARQUBE = "Sonar"     // Jenkins SonarQube tool name
        DOCKER_USER = "madhupdevops"
        APP_NAME = "node-app"
        APP_VERSION = "v2"
    }
    
    stages {

        stage("Clean Workspace") {
            steps {
                echo "Cleaning Jenkins Workspace..."
                cleanWs()
            }
        }

        stage("Git: Code Checkout") {
            steps {
                echo "Onboarding code..."
                git branch: 'main', url: 'https://github.com/dexter73710/TWS.git'
            }
        }

        stage("SonarQube: Analysis") {
            steps {
                withSonarQubeEnv("${SONARQUBE}") {
                    sh """
                        sonar-scanner \
                          -Dsonar.projectKey=${APP_NAME} \
                          -Dsonar.sources=. \
                          -Dsonar.host.url=$SONAR_HOST_URL \
                          -Dsonar.login=$SONAR_AUTH_TOKEN
                    """
                }
            }
        }

        stage("SonarQube: Quality Gates") {
            steps {
                timeout(time: 2, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
